SELECT EMPNO, ENAME , SAL
FROM EMP; 
--------------------------------------오름차순, 내림차순 정리 
SELECT EMPNO, ENAME , SAL
FROM EMP
ORDER BY SAL;

SELECT EMPNO, ENAME , SAL
FROM EMP
ORDER BY SAL  정렬방식 ==> ASC(오름차순,기본값) , DESC (내림차순)

SELECT EMPNO, ENAME , SAL
FROM EMP
ORDER BY SAL DESC , ENAME DESC

SELECT EMPNO, ENAME , SAL*12 "ANNSAL"
FROM EMP
ORDER BY ANNSAL DESC


SELECT EMPNO, ENAME , SAL*12 "ANNSAL"
FROM EMP
ORDER BY 3 DESC

SELECT EMPNO, ENAME , SAL*12 "ANNSAL"
FROM EMP
ORDER BY 2 (POSITION)  DESC


-- 10,20 번 사원들중 수당을 많이 받는 순으로 사번, 이름 , 수당 급여 를 출력 .
SELECT EMPNO, ENAME, COMM, SAL
FROM EMP
WHERE DEPTNO = 30 
ORDER BY COMM DESC 

--------------SQL99 방식 JOIN문 쓰기 ---------------------
SQL> SELECT*
  2  FROM EMP E NATURAL JOIN DEPT D;
  자체적으로 JOIN 조건이 들어가 있음 
  조인된 컬럼은 새롭게 만들어진것이라 특정지으면 안나옴
  조건이 하나일 경우에만 사용가능 테이블 이름이 같은게 하나일때만 
  
  ELECT*
  2  FROM EMP E NATURAL JOIN DEPT D;
     USING(추가 컬럼) 
	 
	 USING을 사용해서 컬럼 추가 가능 
  
  
	NATURAL JOIN:두 테이블의 컬럼명을 동일한 컴럼을 기준으로 두테이블을 연결해줌(1)
	JOIN USING(컬럼) 2개 이상일 때 사용
	INNER JOIN ON(조건) 두 테이블의 컬럼명이 없을때 조건을 기준으로 두 테이블을 연결해줌(0)
	
    컬럼명 변경 
	ALTER TABLE EMP
	RENAME COLUMN DEPTNO TO DNO; 
	

	
	SELECT E.ENAME, D.DNAME 
	FROM EMP E JOIN DEPT D 
	ON (E.DNO = D.DEPTNO);
	
	컬럼명이 다를 경우 ON을 사용해서 JOIN 가능함
	INNER JOIN == EQUI JOIN 
	
	select e.ename , d.deptno, d.dname 
	from emp e , dept d 
	where e.deptno(+) = d.deptno
	
	outer join
	
	SQL99 방식 
	
	select e.ename , d.deptno, d.dname 
	from emp e right outer join dept d 
	on e.deptno = d.deptno
	
	
	
-------------------ㅡ------ MULTIPLE ROW 함수 -------------------------------------------
	
	SELECT COUNT(SAL) , COUNT(*), MIN(SAL), MAX(SAL), SUM(SAL) , AVG(SAL) 
	FROM EMP;
	
	SELECT COUNT(COMM) , COUNT(*), MIN(COMM), MAX(COMM), SUM(COMM) , AVG(COMM) 
	FROM EMP;
	
	COUNT(COMM)   COUNT(*)  MIN(COMM)  MAX(COMM)  SUM(COMM)  AVG(COMM)
----------- ---------- ---------- ---------- ---------- ----------
          4         14          0       1400       2200        550
	
	
	SUM(COMM) == NULL 제외 해서 합계를 구함 
	
	
	숫자와 관련있는 함수들 대부분 NULL 제외 **
	
	문자도 가능한 경우가 있음 (ASCII 값을 기준으로 )
	
	SELECT MIN(ENAME), MAX(HIREDATE)
	FROM EMP;
	
	MIN(ENAME) MAX(HIRE
---------- --------
ADAMS      87/05/23


SELECT AVG(SAL)
FROM EMP; 


SELECT AVG(COMM)
FROM EMP; 


----------------GROUP FUNCTION ---------------

SELECT AVG(SAL)
FROM EMP
GROUP BY DEPTNO;

GROUP BY == 그룹별로 나누어서 계산 
1. 부서별로 그룹을 만듬 
2. 부서별 평균을 만듬
3. 출력 

SELECT DEPTNO , AVG(SAL)
FROM EMP
GROUP BY DEPTNO;

-- JOB 별 평균 급여

SELECT JOB , AVG(SAL)
FROM EMP
GROUP BY JOB;

JOB         AVG(SAL)
--------- ----------
CLERK         1037.5
SALESMAN        1400
PRESIDENT       5000
MANAGER   2758.33333
ANALYST         3000
	
	HAVING 조건 == GROUP 에 대해서 조건을 걸어줌
	WHERE  조건 == ROW 에 대한 조건 걸어줌


SELECT DEPTNO , AVG(SAL)
FROM EMP
GROUP BY DEPTNO
HAVING AVG(SAL) >= 2000
	
  --- JOB 별 평균급여를 구하되 평균급여가 2500 이상만 출력
  
  SELECT JOB , AVG(SAL)
  FROM EMP 
  GROUP BY JOB
  HAVING AVG(SAL) >=2500
  
  ---- 부서번호도 같고 JOB도 동일한 사원들의 그룹을 생성한후 평균 구하기 
  
  SELECT JOB , AVG(SAL)
  FROM EMP 
  GROUP BY DEPTNO,JOB  
  
  
  SELECT        COLUMN,COL, *, F, SAL*12, ALIAS,'....',DISTINCT,||
  FROM          테이블명
  WHERE         조건  ==> 연산자,BETWEEN AND,IN(),IS NULL,LIKE, 
  GROUP BY      컬럼명,컬럼명, ....
  HAVING        그룹의 조건 
  ORDER BY      컬럼명 ASC,DESC,컬렴명,ALIAS,POSITION 
  
  급여 1000이상인 사원을 대상으로 조사!!
  
  부서번호별 JOB별 평균 급여를 구하시오,
  (단 평균급여가 1500 이상, 평균급여가 많은순으로 정렬)
  
  
  SELECT DEPTNO, JOB , AVG(SAL)
  FROM EMP 
  WHERE SAL >=1000 
  GROUP BY JOB , DEPTNO 
  HAVING AVG(SAL)>=1500
  ORDER BY AVG(SAL) DESC;
  
  
  
 ----------------------- SUBQUERY  --------------------------------------
  
  SELECT ENAME, SAL
  FROM EMP					
  WHERE SAL >=
  ( SELECT SAL FROM EMP WHERE ENAME = 'JONES');
  
  
  SELECT ENAME , HIREDATE 
  FROM EMP 
  WHERE HIREDATE >= (SELECT HIREDATE FROM EMP WHERE ENAME='BLAKE');
  
  